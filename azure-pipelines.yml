# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'


stages:
- stage: env
  jobs:
    - job: Nodes
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.13.1'
        displayName: 'Install Node.js'

- stage: build
  jobs:
    - job: build_site
      steps:
        - task: Npm@1
          inputs:
            command: 'install'
        - script: |
            npm run build
            export DEPLOY_DOMAIN=https://preview-${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}-ng-zorro-antd.surge.sh
            npx surge --project ./dist --domain $DEPLOY_DOMAIN
  dependsOn: env

- stage: test
  jobs:
    - job: test_components
      steps:
        - task: Npm@1
          inputs:
            command: 'install'
        - script: |
            npm run test
            cat ./coverage-report/lcov.info | ./node_modules/.bin/codecov

        - task: PublishCodeCoverageResults@1
          displayName: 'publish code coverage results'
          condition: succeededOrFailed()
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage-report/cobertura-coverage.xml
            reportDirectory: $(System.DefaultWorkingDirectory)/coverage-report
            failIfCoverageEmpty: true

        - task: PublishTestResults@2
          displayName: 'publish test results'
          condition: succeededOrFailed()
          inputs:
            searchFolder: $(System.DefaultWorkingDirectory)/junit
            failTaskOnFailedTests: true
            testRunTitle: NG-ZORRO
            testResultsFormat: JUnit
            testResultsFiles: "**/TESTS*.xml"

    - job: test_schematics
      steps:
        - task: Npm@1
          inputs:
            command: 'install'
        - script: npm run test:schematics
  dependsOn: env

- stage: lint
  jobs:
    - job: lint_components
      steps:
        - task: Npm@1
          inputs:
            command: 'install'
        - script: npm run lint
  dependsOn: env

- stage: integration
  jobs:
    - job: integration_cli
      steps:
        - task: Npm@1
          inputs:
            command: 'install'
        - script: npm run integration-cli
    - job: integration_webpack
      steps:
        - task: Npm@1
          inputs:
            command: 'install'
        - script: npm run integration-webpack
#    - job: integration_rollup
#      steps:
#        - task: Npm@1
#          inputs:
#            command: 'install'
#        - script: npm run integration-rollup
  dependsOn: env
